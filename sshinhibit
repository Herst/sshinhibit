#! /usr/bin/env python

'''
Prevent sleep when SSH clients are connected
'''

import sys
import argparse
import subprocess
import daemon
import psutil

def main():
    '''
    Run
    '''

    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('mode', choices=['login', 'logout'])
    args = parser.parse_args()

    inhibit = ['systemd-inhibit',
               '--what=idle:sleep:shutdown:handle-lid-switch',
               'sleep',
               'infinity']

    if args.mode == 'login':
        for proc in psutil.process_iter():
            if inhibit == proc.cmdline():
                return

        print "Starting inhibitor"
        with daemon.DaemonContext():
            subprocess.call(inhibit)
    elif args.mode == 'logout':
        terms = 0
        for usr in psutil.users():
            if usr.host != 'localhost':
                terms += 1
                if terms > 1:
                    return

        print "Stopping inhibitor"
        subprocess.call(['pkill', '-f', ' '.join(inhibit)])

if __name__ == '__main__':
    sys.exit(main())
